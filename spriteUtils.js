import * as THREE from 'https://unpkg.com/three@0.152.2/build/three.module.js';
// Function to draw pixel data onto canvas context
function drawPixels(context, pixelData, pixelSize, colors) {
    const gridPixelSize = context.canvas.width / pixelSize; // Size of each "pixel" on the canvas grid
    context.clearRect(0, 0, context.canvas.width, context.canvas.height); // Clear previous drawing
    for (let y = 0; y < pixelSize; y++) {
        for (let x = 0; x < pixelSize; x++) {
            const colorIndex = pixelData[y * pixelSize + x];
            if (colorIndex > 0) { // 0 is transparent
                context.fillStyle = colors[colorIndex - 1]; // Adjust index for colors array
                context.fillRect(x * gridPixelSize, y * gridPixelSize, gridPixelSize, gridPixelSize);
            }
        }
    }
}
// Sprite definitions (0=transparent, 1=color1, 2=color2, etc.)
// 16x16 Sprite definitions (0=transparent)
// Colors: 1: Primary, 2: Secondary, 3: Accent1, 4: Accent2, etc.
const spriteData = {
    player: { // Enhanced fantasy wizard with better details
        pixels: [
            0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0, // Hat tip
            0,0,0,0,0,1,2,2,2,1,0,0,0,0,0,0,
            0,0,0,0,1,2,3,3,3,2,1,0,0,0,0,0,
            0,0,0,1,2,3,3,8,3,3,2,1,0,0,0,0, // Hat with gem
            0,0,1,4,4,4,4,4,4,4,4,1,0,0,0,0, // Hat brim
            0,0,5,5,5,5,5,5,5,5,5,5,0,0,0,0, // Hair/beard
            0,0,5,6,6,7,5,5,7,6,6,5,0,0,0,0, // Face/Eyes
            0,0,5,5,6,6,6,6,6,6,5,5,0,0,0,0, // Beard detail
            0,0,0,5,5,9,6,6,9,5,5,0,0,0,0,0, // Mustache
            0,0,0,2,3,2,5,5,2,3,2,0,10,0,0,0, // Shoulders & Staff
            0,0,2,3,3,3,2,2,3,3,3,2,11,10,0,0,
            0,2,3,3,3,3,3,3,3,3,3,2,11,0,0,0,
            0,2,2,3,3,8,3,3,8,3,2,2,11,0,0,0, // Robe with gems
            0,0,2,2,3,3,3,3,3,3,2,2,11,0,0,0,
            0,0,0,0,2,2,0,0,2,2,0,0,11,0,0,0, // Feet
            0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0, // Staff bottom
        ],
        colors: ['#2c387e', '#4054b2', '#ffd700', '#8b6914', '#f4e4bc', '#8d6e63', '#000000', '#64b5f6', '#e91e63', '#8a2be2', '#654321'],
        pixelGridSize: 16
    },
    
    enhancedKnight: { // New detailed knight sprite
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0, // Helmet top
            0,0,0,1,1,2,2,2,2,2,2,1,1,0,0,0,
            0,0,1,2,2,2,3,2,2,3,2,2,2,1,0,0, // Helmet with eye slits
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,2,2,4,4,4,4,4,4,4,4,4,4,2,2,1, // Chainmail
            0,1,4,4,5,4,4,6,4,4,5,4,4,4,1,0,
            0,0,4,4,4,4,4,7,4,4,4,4,4,4,0,0, // Chestplate
            0,0,4,5,4,4,7,7,7,4,4,5,4,4,0,0,
            0,0,4,4,4,7,7,7,7,7,4,4,4,4,0,0,
            0,0,0,4,7,7,8,8,8,7,7,4,0,0,0,0, // Belt
            0,0,0,4,4,7,7,7,7,7,4,4,0,0,0,0,
            0,0,0,0,4,4,7,7,7,4,4,0,0,0,0,0, // Legs
            0,0,0,0,4,4,4,0,4,4,4,0,0,0,0,0,
            0,0,0,2,2,2,2,0,2,2,2,2,0,0,0,0, // Boots
            0,0,0,2,2,2,0,0,0,2,2,2,0,0,0,0,
        ],
        colors: ['#708090', '#c0c0c0', '#000000', '#4682b4', '#36454f', '#b8860b', '#8b4513', '#daa520'],
        pixelGridSize: 16
    },

    greenOgre: { // Enhanced ogre with more detail
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,2,2,2,2,2,2,0,0,0,0,0, // Horns
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,
            0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
            0,1,1,1,3,3,1,1,1,3,3,1,1,1,1,0, // Eyes
            1,1,1,1,3,4,3,1,3,4,3,1,1,1,1,1,
            1,1,1,1,1,3,1,1,1,3,1,1,1,1,1,1,
            1,1,1,1,1,1,1,5,1,1,1,1,1,1,1,1, // Nose
            1,1,1,1,1,5,5,5,5,5,1,1,1,1,1,1, // Mouth
            1,1,1,1,5,6,5,5,5,6,5,1,1,1,1,1, // Teeth
            0,1,1,1,1,5,5,5,5,5,1,1,1,1,1,0,
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,
            0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0, // Feet
            0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,
        ],
        colors: ['#2e7d32', '#8d6e63', '#ff0000', '#000000', '#654321', '#ffffff'],
        pixelGridSize: 16
    },

    redSkull: { // Enhanced skull with glowing eyes
        pixels: [
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,1,1,1,1,2,2,1,1,2,2,1,1,1,1,0, // Eye sockets
            0,1,1,1,2,3,3,2,2,3,3,2,1,1,1,0,
            1,1,1,1,2,4,4,2,2,4,4,2,1,1,1,1, // Glowing eyes
            1,1,1,1,1,2,2,1,1,2,2,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,5,1,5,1,1,1,1,1,1,1, // Nasal cavity
            0,1,1,1,1,1,1,5,1,1,1,1,1,1,1,0,
            0,1,1,1,1,5,1,1,1,5,1,1,1,1,1,0,
            0,0,1,1,1,1,5,5,5,1,1,1,1,1,0,0, // Teeth
            0,0,0,1,1,5,1,5,1,5,1,1,1,0,0,0,
            0,0,0,1,1,1,5,5,5,1,1,1,1,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
        ],
        colors: ['#f8f8ff', '#8b0000', '#000000', '#ff0000', '#ffff00'],
        pixelGridSize: 16
    },

    cyclops: { // Enhanced cyclops with better detail
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0,
            0,0,1,2,2,3,3,3,3,3,3,2,2,1,0,0, // Eye area
            0,1,2,2,3,4,4,5,4,4,4,3,2,2,1,0,
            1,2,2,2,3,4,6,7,6,4,4,3,2,2,2,1, // Giant eye
            1,2,2,2,3,4,4,5,4,4,4,3,2,2,2,1,
            1,2,2,2,2,3,3,3,3,3,3,2,2,2,2,1,
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            0,1,2,2,2,8,8,8,8,8,8,2,2,2,1,0, // Mouth
            0,0,1,2,2,8,9,8,8,9,8,2,2,1,0,0, // Teeth
            0,0,0,1,2,2,8,8,8,8,2,2,1,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0, // Legs
            0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,
            0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,
        ],
        colors: ['#8b4513', '#d2691e', '#ffffff', '#ff0000', '#000000', '#ffff00', '#8b0000', '#654321', '#ffffff'],
        pixelGridSize: 16
    },

    magicWisp: { // Enhanced magical wisp with ethereal glow
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,1,2,3,3,3,3,2,1,0,0,0,0,
            0,0,0,1,2,3,4,5,5,4,3,2,1,0,0,0,
            0,0,1,2,3,4,5,6,6,5,4,3,2,1,0,0,
            0,1,2,3,4,5,6,7,7,6,5,4,3,2,1,0, // Bright core
            0,1,2,3,4,5,6,7,8,7,6,5,4,3,2,1,
            0,1,2,3,4,5,6,7,7,6,5,4,3,2,1,0,
            0,0,1,2,3,4,5,6,6,5,4,3,2,1,0,0,
            0,0,0,1,2,3,4,5,5,4,3,2,1,0,0,0,
            0,0,0,0,1,2,3,3,3,3,2,1,0,0,0,0,
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#4b0082', '#8a2be2', '#9370db', '#ba55d3', '#da70d6', '#ee82ee', '#dda0dd', '#ffffff'],
        pixelGridSize: 16
    },

    enhancedRock: { // More detailed rock with crystals
        pixels: [
            0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,
            0,0,0,1,1,2,2,3,2,1,1,1,0,0,0,0,
            0,0,1,2,2,2,3,3,3,2,2,1,1,0,0,0,
            0,1,2,2,3,2,2,3,2,2,3,2,1,1,0,0,
            0,1,2,3,2,2,2,2,2,2,2,3,2,1,1,0,
            1,1,2,2,2,4,4,2,2,4,2,2,2,1,1,1, // Crystal veins
            1,2,2,2,2,4,4,4,4,4,2,2,2,2,1,1,
            1,2,2,3,2,2,4,4,4,2,2,3,2,2,2,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,2,2,2,3,2,2,2,2,2,3,2,2,2,2,1,
            1,1,2,2,2,2,2,2,2,2,2,2,2,2,1,1,
            0,1,1,2,2,2,2,2,2,2,2,2,1,1,1,0,
            0,0,1,1,1,2,2,2,2,2,1,1,1,1,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
        ],
        colors: ['#696969', '#a9a9a9', '#2f4f4f', '#87ceeb'],
        pixelGridSize: 16
    },

    enhancedTree: { // More detailed tree with fruit
        pixels: [
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,1,2,2,3,3,2,2,2,1,1,0,0,0,
            0,0,1,2,3,3,3,4,3,3,2,2,1,0,0,0, // Fruits
            0,1,2,3,3,4,1,1,3,4,3,2,1,1,0,0,
            1,2,3,3,1,1,0,0,1,1,3,3,2,1,1,0,
            1,2,3,1,0,0,0,0,0,0,0,1,3,2,1,0,
            1,2,2,1,0,0,5,5,5,0,0,0,1,2,1,0, // Trunk
            0,1,1,0,0,5,6,6,5,5,0,0,1,1,0,0,
            0,0,0,0,0,5,6,6,6,5,0,0,0,0,0,0,
            0,0,0,0,0,5,6,6,6,5,0,0,0,0,0,0,
            0,0,0,0,0,0,5,6,5,0,0,0,0,0,0,0,
            0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,
            0,0,0,0,0,0,5,5,5,0,0,0,0,0,0,0,
            0,0,0,0,0,5,5,5,5,5,0,0,0,0,0,0, // Roots
            0,0,0,0,5,5,5,0,0,5,5,5,0,0,0,0,
            0,0,0,0,5,5,0,0,0,0,5,5,0,0,0,0,
        ],
        colors: ['#228b22', '#006400', '#32cd32', '#ff6347', '#8b4513', '#a0522d'],
        pixelGridSize: 16
    },

    castle: { // Enhanced castle with more detail
        pixels: [
            1,1,1,1,0,0,1,1,1,1,0,0,1,1,1,1, // Battlements
            2,2,2,2,0,0,2,2,2,2,0,0,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
            2,2,3,3,3,3,3,4,3,3,3,3,3,2,2,2, // Decorative band
            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
            2,2,2,5,5,5,5,5,5,5,5,5,2,2,2,2,
            2,2,2,5,6,6,6,7,6,6,6,5,2,2,2,2, // Windows
            2,2,2,5,6,6,6,7,6,6,6,5,2,2,2,2,
            2,2,2,5,5,5,8,8,8,5,5,5,2,2,2,2, // Gate
            2,2,2,2,2,5,8,9,8,5,2,2,2,2,2,2,
            2,2,2,2,2,5,8,8,8,5,2,2,2,2,2,2,
            2,2,2,2,2,5,8,8,8,5,2,2,2,2,2,2,
            2,2,2,2,2,5,8,8,8,5,2,2,2,2,2,2,
            2,2,2,2,2,5,8,8,8,5,2,2,2,2,2,2,
            2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
            3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3, // Foundation
        ],
        colors: ['#708090', '#778899', '#2f4f4f', '#ffd700', '#4682b4', '#000080', '#87ceeb', '#8b4513', '#654321'],
        pixelGridSize: 16
    },

    enhancedNPC: { // Enhanced villager sprite
        pixels: [
            0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0, // Hat
            0,0,0,0,0,1,2,2,2,2,1,0,0,0,0,0,
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0,
            0,0,0,3,3,3,3,3,3,3,3,3,0,0,0,0, // Hair
            0,0,0,4,4,4,4,4,4,4,4,4,0,0,0,0, // Face
            0,0,0,4,5,5,4,4,4,5,5,4,0,0,0,0, // Eyes
            0,0,0,4,4,4,6,4,6,4,4,4,0,0,0,0, // Nose & mouth
            0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,
            0,0,0,7,7,7,4,4,4,7,7,7,0,0,0,0, // Shirt
            0,0,7,7,7,7,7,4,7,7,7,7,7,0,0,0,
            0,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,
            0,7,7,7,7,7,7,7,7,7,7,7,7,7,0,0,
            0,0,7,7,7,7,7,7,7,7,7,7,7,0,0,0,
            0,0,0,8,8,8,0,0,0,8,8,8,0,0,0,0, // Pants
            0,0,0,9,9,9,0,0,0,9,9,9,0,0,0,0, // Shoes
        ],
        colors: ['#8b4513', '#d2691e', '#654321', '#ffdbac', '#000000', '#ff69b4', '#32cd32', '#654321', '#dda0dd'],
        pixelGridSize: 16
    },



    rock: 'enhancedRock', // Use enhanced rock sprite
    tree: 'enhancedTree', // Use enhanced tree sprite
    deadTree: { // Gnarled, leafless tree
        pixels: [
            0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
            0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,
            0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,
            0,0,0,1,0,0,1,0,0,0,1,0,0,0,0,0,
            0,0,1,0,0,0,0,1,0,1,0,0,0,0,0,0,
            0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,0,0,0,0,1,1,0,0,0,0,
            0,0,0,0,0,1,0,0,0,1,1,0,0,0,0,0,
            0,0,0,0,1,2,1,0,0,1,0,0,0,0,0,0,
            0,0,0,0,1,2,1,0,1,0,0,0,0,0,0,0,
            0,0,0,1,2,2,1,0,1,0,0,0,0,0,0,0,
            0,0,0,1,2,2,1,0,0,0,0,0,0,0,0,0,
            0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,
            0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#4B3A26', '#3D2D1D'], // Dark, gnarled brown colors
        pixelGridSize: 16
    },
    cactus: { // Saguaro-style cactus
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,0,0,0,2,0,0,0, // Top with flower
            0,0,1,1,0,0,0,1,1,0,0,2,2,2,0,0, // Arms
            0,0,1,1,0,0,0,1,1,0,0,0,2,0,0,0,
            0,0,1,1,0,0,0,1,1,0,0,0,0,0,0,0,
            0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,
        ],
        colors: ['#228B22', '#FF1493'], // Green, Pink flower
        pixelGridSize: 16
    },
    
    // NPC Sprites for the RPG system
    merchant: { // Friendly trader
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,1,2,3,3,2,2,3,3,2,1,0,0,0, // Face with eyes
            0,0,0,1,2,2,2,4,4,2,2,2,1,0,0,0, // Mustache
            0,0,0,1,2,2,4,4,4,4,2,2,1,0,0,0,
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,5,5,5,6,6,6,5,5,5,0,0,0,0, // Rich clothing
            0,0,5,5,6,6,6,6,6,6,6,5,5,0,0,0,
            0,0,5,6,6,6,6,6,6,6,6,6,5,0,0,0,
            0,5,5,6,6,6,6,6,6,6,6,6,5,5,0,0,
            0,5,6,6,6,6,6,6,6,6,6,6,6,5,0,0,
            0,5,5,6,6,6,6,6,6,6,6,6,5,5,0,0,
            0,0,5,5,5,6,6,6,6,6,5,5,5,0,0,0,
            0,0,0,5,5,1,1,0,0,1,1,5,5,0,0,0, // Legs
            0,0,0,0,1,7,7,0,0,7,7,1,0,0,0,0, // Boots
            0,0,0,0,7,7,7,0,0,7,7,7,0,0,0,0,
        ],
        colors: ['#8D6E63', '#FFDBCB', '#000000', '#8B4513', '#9C27B0', '#673AB7', '#7B1FA2'], // Hat, Skin, Eyes, Mustache, Purple clothing, Boots
        pixelGridSize: 16
    },
    
    guard: { // Town guard
        pixels: [
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0, // Helmet
            0,0,1,2,3,4,4,2,2,4,4,3,2,1,0,0, // Face
            0,0,1,2,3,3,3,5,5,3,3,3,2,1,0,0,
            0,0,1,2,2,3,5,5,5,5,3,2,2,1,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0,
            0,0,1,6,6,6,7,7,7,6,6,6,1,0,0,0, // Chestplate
            0,1,6,7,7,7,8,8,7,7,7,7,6,1,0,0,
            0,1,6,7,7,7,8,8,7,7,7,7,6,1,0,0,
            0,1,6,7,7,7,7,7,7,7,7,7,6,1,0,0,
            0,1,6,6,7,7,7,7,7,7,7,6,6,1,0,0,
            0,0,1,6,6,6,6,6,6,6,6,6,1,0,0,0,
            0,0,0,1,1,1,1,0,0,1,1,1,1,0,0,0, // Legs
            0,0,0,9,9,9,0,0,0,0,9,9,9,0,0,0, // Boots
            0,0,9,9,9,0,0,0,0,0,0,9,9,9,0,0,
            0,0,9,9,0,0,0,0,0,0,0,0,9,9,0,0,
        ],
        colors: ['#B0BEC5', '#78909C', '#FFDBCB', '#000000', '#A1887F', '#CFD8DC', '#90A4AE', '#ECEFF1', '#37474F'], // LightGrayMetal, DarkGrayMetal, Skin, Eyes, Beard, LightMetal, MidMetal, HighlightMetal, DarkBoot
        pixelGridSize: 16
    },
    
    villager: { // Simple villager
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0, // Hair
            0,0,1,2,2,3,1,1,3,2,2,1,0,0,0,0, // Face/Eyes
            0,0,1,2,2,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,1,2,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0, // Shirt
            0,0,0,4,5,5,4,4,5,5,4,0,0,0,0,0,
            0,0,4,5,5,5,4,4,5,5,5,4,0,0,0,0,
            0,0,4,5,5,5,4,4,5,5,5,4,0,0,0,0,
            0,0,0,4,5,5,4,4,5,5,4,0,0,0,0,0,
            0,0,0,0,4,4,4,4,4,4,4,0,0,0,0,0,
            0,0,0,6,6,6,6,6,6,6,6,6,0,0,0,0, // Trousers
            0,0,0,6,6,6,6,6,6,6,6,6,0,0,0,0,
            0,0,6,6,6,0,0,0,0,6,6,6,0,0,0,0, // Legs
            0,0,7,7,7,0,0,0,0,0,7,7,7,0,0,0, // Shoes
            0,0,7,7,7,0,0,0,0,0,7,7,7,0,0,0,
        ],
        colors: ['#A1887F', '#FFDBCB', '#000000', '#0288D1', '#03A9F4', '#558B2F', '#3E2723'], // Hair, Skin, Eyes, ShirtBlue, LightBlue, PantsGreen, ShoeBrown
        pixelGridSize: 16
    },
    
    questGiver: { // Elder/important NPC
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0, // White hair
            0,0,0,1,1,2,2,1,1,2,2,1,1,0,0,0, // Wise face
            0,0,0,1,2,2,2,3,3,2,2,2,1,0,0,0,
            0,0,0,1,2,2,3,3,3,3,2,2,1,0,0,0, // Long beard
            0,0,0,1,1,2,3,3,3,2,1,1,0,0,0,0,
            0,0,0,4,4,1,3,3,3,1,4,4,0,0,0,0, // Robes
            0,0,4,4,5,5,5,5,5,5,5,4,4,0,0,0,
            0,0,4,5,5,5,5,5,5,5,5,5,4,0,0,0,
            0,4,4,5,5,5,5,5,5,5,5,5,4,4,0,0,
            0,4,5,5,5,5,5,5,5,5,5,5,5,4,0,0,
            0,4,4,5,5,5,5,5,5,5,5,5,4,4,0,0,
            0,0,4,4,4,5,5,5,5,5,4,4,4,0,0,0,
            0,0,0,4,4,6,6,0,0,6,6,4,4,0,0,0,
            0,0,0,0,6,7,7,0,0,7,7,6,0,0,0,0,
            0,0,0,0,7,7,7,0,0,7,7,7,0,0,0,0,
        ],
        colors: ['#E0E0E0', '#FFDBCB', '#000000', '#1A237E', '#303F9F', '#534BAE', '#424242'], // White hair, Skin, Eyes, Blue robes, Sandals
        pixelGridSize: 16
    },
    
    blacksmith: { // Burly blacksmith
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0, // Hair
            0,0,0,1,1,2,2,1,1,2,2,1,1,0,0,0, // Strong face
            0,0,0,1,2,2,2,3,3,2,2,2,1,0,0,0,
            0,0,0,1,2,2,3,3,3,3,2,2,1,0,0,0, // Beard
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,4,4,4,5,5,5,4,4,4,0,0,0,0, // Apron
            0,0,4,4,5,5,6,6,6,5,5,4,4,0,0,0,
            0,0,4,5,5,6,6,6,6,6,5,5,4,0,0,0, // Leather apron
            0,4,4,5,6,6,6,6,6,6,6,5,4,4,0,0,
            0,4,5,6,6,6,6,6,6,6,6,6,5,4,0,0,
            0,4,4,6,6,6,6,6,6,6,6,6,4,4,0,0,
            0,0,4,4,6,6,6,6,6,6,6,4,4,0,0,0,
            0,0,0,4,4,7,7,0,0,7,7,4,4,0,0,0, // Strong legs
            0,0,0,0,7,8,8,0,0,8,8,7,0,0,0,0, // Heavy boots
            0,0,0,0,8,8,8,0,0,8,8,8,0,0,0,0,
        ],
        colors: ['#5D4037', '#FFDBCB', '#000000', '#8D6E63', '#6D4C41', '#3E2723', '#795548', '#212121'], // Brown hair, Skin, Eyes, Apron, Leather, Pants, Boots
        pixelGridSize: 16
    },
    
    mage: { // Magical scholar
        pixels: [
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0, // Pointed hat
            0,0,1,2,3,4,4,2,2,4,4,3,2,1,0,0, // Wise face
            0,0,1,2,3,3,3,5,5,3,3,3,2,1,0,0,
            0,0,1,2,2,3,5,5,5,5,3,2,2,1,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0,
            0,0,2,2,2,6,6,6,6,6,6,2,2,2,0,0, // Robes
            0,2,2,6,6,7,7,7,7,7,7,6,6,2,2,0,
            0,2,6,6,7,7,7,7,7,7,7,7,6,6,2,0,
            2,2,6,7,7,7,7,7,7,7,7,7,7,6,2,2,
            2,6,7,7,7,7,7,7,7,7,7,7,7,7,6,2,
            2,2,7,7,7,7,7,7,7,7,7,7,7,7,2,2,
            0,2,2,7,7,7,7,7,7,7,7,7,7,2,2,0,
            0,0,2,2,2,8,8,0,0,8,8,2,2,2,0,0,
            0,0,0,2,8,9,9,0,0,9,9,8,2,0,0,0,
            0,0,0,2,9,9,9,0,0,9,9,9,2,0,0,0,
        ],
        colors: ['#4A148C', '#7B1FA2', '#FFDBCB', '#000000', '#6A1B9A', '#8E24AA', '#9C27B0', '#AB47BC', '#3E2723'], // Purple hat, Skin, Eyes, Robes, Boots
        pixelGridSize: 16
    },
    
    priest: { // Holy figure
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0, // Hair
            0,0,0,1,1,2,2,1,1,2,2,1,1,0,0,0, // Kind face
            0,0,0,1,2,2,2,3,3,2,2,2,1,0,0,0,
            0,0,0,1,2,2,3,3,3,3,2,2,1,0,0,0,
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,4,4,4,5,5,5,4,4,4,0,0,0,0, // White robes
            0,0,4,4,5,5,5,5,5,5,5,4,4,0,0,0,
            0,0,4,5,5,5,5,5,5,5,5,5,4,0,0,0,
            0,4,4,5,5,5,5,5,5,5,5,5,4,4,0,0,
            0,4,5,5,5,5,5,5,5,5,5,5,5,4,0,0,
            0,4,4,5,5,5,5,5,5,5,5,5,4,4,0,0,
            0,0,4,4,4,5,5,5,5,5,4,4,4,0,0,0,
            0,0,0,4,4,6,6,0,0,6,6,4,4,0,0,0,
            0,0,0,0,6,7,7,0,0,7,7,6,0,0,0,0, // Sandals
            0,0,0,0,7,7,7,0,0,7,7,7,0,0,0,0,
        ],
        colors: ['#8D6E63', '#FFDBCB', '#000000', '#E8EAF6', '#F3E5F5', '#6D4C41', '#795548'], // Hair, Skin, Eyes, White robes, Sandals
        pixelGridSize: 16
    },
    
    trainer: { // Combat instructor
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0, // Hair
            0,0,0,1,1,2,2,1,1,2,2,1,1,0,0,0, // Scarred face
            0,0,0,1,2,2,2,3,3,2,2,2,1,0,0,0,
            0,0,0,1,2,4,3,3,3,3,2,2,1,0,0,0, // Scar
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,5,5,5,6,6,6,5,5,5,0,0,0,0, // Battle gear
            0,0,5,5,6,6,6,6,6,6,6,5,5,0,0,0,
            0,0,5,6,6,6,6,6,6,6,6,6,5,0,0,0,
            0,5,5,6,6,6,6,6,6,6,6,6,5,5,0,0,
            0,5,6,6,6,6,6,6,6,6,6,6,6,5,0,0,
            0,5,5,6,6,6,6,6,6,6,6,6,5,5,0,0,
            0,0,5,5,5,6,6,6,6,6,5,5,5,0,0,0,
            0,0,0,5,5,7,7,0,0,7,7,5,5,0,0,0, // Legs
            0,0,0,0,7,8,8,0,0,8,8,7,0,0,0,0, // Boots
            0,0,0,0,8,8,8,0,0,8,8,8,0,0,0,0,
        ],
        colors: ['#5D4037', '#FFDBCB', '#000000', '#FF5722', '#D32F2F', '#607D8B', '#424242', '#795548'], // Hair, Skin, Eyes, Scar, Armor, Pants, Boots
        pixelGridSize: 16
    },
    
    innkeeper: { // Welcoming host
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0, // Hair
            0,0,0,1,1,2,2,1,1,2,2,1,1,0,0,0, // Friendly face
            0,0,0,1,2,2,2,3,3,2,2,2,1,0,0,0,
            0,0,0,1,2,2,3,3,3,3,2,2,1,0,0,0, 
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,4,4,4,5,5,5,4,4,4,0,0,0,0, // Apron
            0,0,4,4,5,5,6,6,6,5,5,4,4,0,0,0,
            0,0,4,5,5,6,6,6,6,6,5,5,4,0,0,0, // Clean apron
            0,4,4,5,6,6,6,6,6,6,6,5,4,4,0,0,
            0,4,5,6,6,6,6,6,6,6,6,6,5,4,0,0,
            0,4,4,6,6,6,6,6,6,6,6,6,4,4,0,0,
            0,0,4,4,6,6,6,6,6,6,6,4,4,0,0,0,
            0,0,0,4,4,7,7,0,0,7,7,4,4,0,0,0, 
            0,0,0,0,7,8,8,0,0,8,8,7,0,0,0,0, // Comfortable shoes
            0,0,0,0,8,8,8,0,0,8,8,8,0,0,0,0,
        ],
        colors: ['#8D6E63', '#FFDBCB', '#000000', '#4CAF50', '#66BB6A', '#E8F5E8', '#795548', '#5D4037'], // Hair, Skin, Eyes, Green apron, Shoes
        pixelGridSize: 16
    },
    cactusFlower: {
        pixels: [
            0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,
            0,0,0,0,1,1,0,1,1,0,1,1,0,0,0,0,
            0,0,0,0,0,0,0,1,1,0,1,1,0,0,0,0,
            0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#2E8B57', '#FF69B4'], // SeaGreen, HotPink (flower)
        pixelGridSize: 16
    },
    grass: {
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,
            0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,
            0,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,1,1,1,0,1,0,1,1,1,0,0,0,0,
            0,0,1,1,1,0,0,0,0,0,1,1,1,0,0,0,
            0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,
            0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,
            0,1,1,0,0,0,0,0,0,0,0,0,1,1,0,0,
            1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,0,
            1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,
        ],
        colors: ['#34A853'], // Vibrant green
        pixelGridSize: 16
    },
    flower: { // A yellow flower with a red center
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,2,2,0,0,2,2,0,0,0,0,0,
            0,0,0,0,2,3,3,2,2,3,3,2,0,0,0,0,
            0,0,0,0,2,3,3,2,2,3,3,2,0,0,0,0,
            0,0,0,0,0,2,2,0,0,2,2,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
            0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#2E8B57', '#FFD700', '#FF4500'], // StemGreen, PetalGold, CenterRed
        pixelGridSize: 16
    },
    default: {
        pixels: [ // Simple 16x16 white square for default
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
        ],
        colors: ['#FFFFFF'],
        pixelGridSize: 16
    },
    castle: { // Enhanced detailed castle sprite with towers and architecture
        pixels: [
            // Row 1
            1,1,1,1,2,2,2,2,2,2,2,2,1,1,1,1,
            // Row 2  
            1,1,2,2,3,3,3,3,3,3,3,3,2,2,1,1,
            // Row 3
            1,2,3,3,4,4,5,5,5,5,4,4,3,3,2,1,
            // Row 4
            2,3,4,4,5,6,6,7,7,6,6,5,4,4,3,2,
            // Row 5
            2,3,4,5,6,7,7,8,8,7,7,6,5,4,3,2,
            // Row 6  
            2,3,4,5,6,7,8,8,8,8,7,6,5,4,3,2,
            // Row 7
            2,3,4,5,6,7,8,9,9,8,7,6,5,4,3,2,
            // Row 8
            2,3,4,5,6,7,8,9,9,8,7,6,5,4,3,2,
            // Row 9
            2,3,4,5,6,7,8,8,8,8,7,6,5,4,3,2,
            // Row 10
            2,3,4,5,6,6,6,6,6,6,6,6,5,4,3,2,
            // Row 11
            2,3,4,5,5,5,5,5,5,5,5,5,5,4,3,2,
            // Row 12
            2,3,4,4,4,4,4,4,4,4,4,4,4,4,3,2,
            // Row 13 - Door area
            2,3,4,4,4,4,10,10,10,10,4,4,4,4,3,2,
            // Row 14
            2,3,4,4,4,4,10,11,11,10,4,4,4,4,3,2,
            // Row 15
            2,3,4,4,4,4,10,11,11,10,4,4,4,4,3,2,
            // Row 16
            2,2,2,2,2,2,10,10,10,10,2,2,2,2,2,2,
        ],
        colors: [
            '#8B8680', // 1 - Dark stone base
            '#A0A0A0', // 2 - Medium stone  
            '#B8B8B8', // 3 - Light stone
            '#D0D0D0', // 4 - Very light stone
            '#E8E8E8', // 5 - Lightest stone
            '#87CEEB', // 6 - Sky blue (windows)
            '#4682B4', // 7 - Steel blue (window frames)
            '#FFD700', // 8 - Gold (royal decorations)
            '#FF6347', // 9 - Tomato red (banners/flags)
            '#654321', // 10 - Dark brown (door)
            '#8B4513'  // 11 - Saddle brown (door handle)
        ],
        pixelGridSize: 16
    },
    castleWall: { // Enhanced stone wall texture with more detail
        pixels: [
            1,2,2,1,3,3,1,2,2,1,3,3,1,2,2,1,
            2,3,3,2,1,1,2,3,3,2,1,1,2,3,3,2,
            2,3,3,2,1,1,2,3,3,2,1,1,2,3,3,2,
            1,2,2,1,3,3,1,2,2,1,3,3,1,2,2,1,
            3,1,1,3,2,2,3,1,1,3,2,2,3,1,1,3,
            1,2,2,1,3,3,1,2,2,1,3,3,1,2,2,1,
            2,3,3,2,1,1,2,3,3,2,1,1,2,3,3,2,
            1,2,2,1,3,3,1,2,2,1,3,3,1,2,2,1,
            2,3,3,2,1,1,2,3,3,2,1,1,2,3,3,2,
            1,2,2,1,3,3,1,2,2,1,3,3,1,2,2,1,
            3,1,1,3,2,2,3,1,1,3,2,2,3,1,1,3,
            1,2,2,1,3,3,1,2,2,1,3,3,1,2,2,1,
            2,3,3,2,1,1,2,3,3,2,1,1,2,3,3,2,
            1,2,2,1,3,3,1,2,2,1,3,3,1,2,2,1,
            2,3,3,2,1,1,2,3,3,2,1,1,2,3,3,2,
            1,2,2,1,3,3,1,2,2,1,3,3,1,2,2,1,
        ],
        colors: [
            '#B0BEC5', // 1 - Light stone  
            '#90A4AE', // 2 - Medium stone
            '#CFD8DC'  // 3 - Very light stone
        ],
        pixelGridSize: 16,
    },
    castleDoor: { // Enhanced ornate castle door
        pixels: [
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,1,
            1,2,3,4,4,4,4,4,4,4,4,4,4,3,2,1,
            1,2,3,4,5,5,5,5,5,5,5,5,4,3,2,1,
            1,2,3,4,5,6,6,6,6,6,6,5,4,3,2,1,
            1,2,3,4,5,6,7,7,7,7,6,5,4,3,2,1,
            1,2,3,4,5,6,7,8,8,7,6,5,4,3,2,1,
            1,2,3,4,5,6,7,8,8,7,6,5,4,3,2,1,
            1,2,3,4,5,6,7,7,7,7,6,5,4,3,2,1,
            1,2,3,4,5,6,6,6,6,6,6,5,4,3,2,1,
            1,2,3,4,5,5,5,9,9,5,5,5,4,3,2,1,
            1,2,3,4,4,4,4,9,9,4,4,4,4,3,2,1,
            1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        ],
        colors: [
            '#654321', // 1 - Dark brown frame
            '#8B4513', // 2 - Saddle brown
            '#A0522D', // 3 - Sienna
            '#D2691E', // 4 - Chocolate
            '#DEB887', // 5 - Burlywood  
            '#F4A460', // 6 - Sandy brown
            '#FFD700', // 7 - Gold decorations
            '#C0C0C0', // 8 - Silver center
            '#B8860B'  // 9 - Dark goldenrod handles
        ],
        pixelGridSize: 16
    },
    throne: {
        pixels: [
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,1,2,2,2,2,2,2,2,2,2,2,2,1,1,0,
            1,2,3,3,2,2,2,2,2,2,2,2,3,3,2,1,
            1,2,3,3,2,2,2,2,2,2,2,2,3,3,2,1,
            1,2,2,2,2,4,4,4,4,4,4,2,2,2,2,1,
            1,2,2,2,2,4,4,4,4,4,4,2,2,2,2,1,
            1,2,2,2,2,4,4,4,4,4,4,2,2,2,2,1,
            1,2,2,2,2,4,4,4,4,4,4,2,2,2,2,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,

            1,2,2,2,0,0,0,0,0,0,0,0,2,2,2,1,
            1,2,2,2,0,0,0,0,0,0,0,0,2,2,2,1,
            1,2,2,2,0,0,0,0,0,0,0,0,2,2,2,1,
            1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#FFD700', '#D4AF37', '#B8860B', '#B22222'], // Gold1, Gold2, Gold3, Red cushion
        pixelGridSize: 16,
    },
    torch: {
        pixels: [
            0,0,0,0,0,0,1,2,3,1,0,0,0,0,0,0,
            0,0,0,0,0,1,2,3,1,2,1,0,0,0,0,0,
            0,0,0,0,1,2,3,1,2,3,1,0,0,0,0,0,
            0,0,0,0,1,3,1,2,3,1,0,0,0,0,0,0,
            0,0,0,0,0,1,2,3,1,0,0,0,0,0,0,0,
            0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,
            0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,
            0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,
            0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,
            0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,
            0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,
            0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,
            0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,
            0,0,0,0,0,0,4,4,4,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#FFA500', '#FF4500', '#FFD700', '#696969'], // Orange, Red-Orange, Yellow, Gray holder
        pixelGridSize: 16
    },
    bookshelf: {
        pixels: [
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,2,3,4,5,2,3,4,5,2,3,4,5,2,3,1,
            1,2,3,4,5,2,3,4,5,2,3,4,5,2,3,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,3,2,5,4,3,2,5,4,3,2,5,4,3,2,1,
            1,3,2,5,4,3,2,5,4,3,2,5,4,3,2,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,4,5,3,2,4,5,3,2,4,5,3,2,4,5,1,
            1,4,5,3,2,4,5,3,2,4,5,3,2,4,5,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,5,4,2,3,5,4,2,3,5,4,2,3,5,4,1,
            1,5,4,2,3,5,4,2,3,5,4,2,3,5,4,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,
            1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        ],
        colors: ['#8B4513', '#B22222', '#00008B', '#006400', '#4B0082'], // Wood, Red, Blue, Green, Indigo books
        pixelGridSize: 16,
    },
    fireplace: {
        pixels: [
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,
            1,2,1,3,3,3,3,3,3,3,3,3,3,1,2,1,
            1,2,1,3,4,5,5,5,5,5,5,4,3,1,2,1,
            1,2,1,3,4,4,5,5,5,5,4,4,3,1,2,1,
            1,2,1,3,3,4,4,5,5,4,4,3,3,1,2,1,
            1,2,1,3,3,3,4,4,4,4,3,3,3,1,2,1,
            1,2,1,3,3,3,3,3,3,3,3,3,3,1,2,1,
            1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,
            0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,
            0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,
            0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,
        ],
        colors: ['#696969', '#A9A9A9', '#000000', '#FF8C00', '#FF4500'], // Mortar, Stone, Inside, Orange, Red
        pixelGridSize: 16
    },
    deadBush: {
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,
            0,0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,
            0,0,0,0,1,0,1,0,1,0,1,0,0,0,0,0,
            0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,0,
            0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,0,
            0,0,1,0,1,0,0,0,0,0,1,0,1,0,0,0,
            0,0,1,1,0,0,0,0,0,0,0,1,1,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#8B5A2B'], // Dry brown
        pixelGridSize: 16
    },
    dirtPatch: {
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,
            0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,
            0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,
            0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,
            0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#966944'], // Earthy brown
         pixelGridSize: 16
     },
    shrine: {
        pixels: [
            0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
            0,0,0,0,1,1,2,3,2,1,1,0,0,0,0,0,
            0,0,0,1,2,3,4,4,3,2,1,1,0,0,0,0,
            0,0,1,2,3,4,5,5,4,3,2,1,0,0,0,0,
            0,1,2,3,4,5,5,5,5,4,3,2,1,0,0,0,
            0,1,2,3,4,5,5,5,5,4,3,2,1,0,0,0,
            1,2,3,4,5,5,5,5,5,5,4,3,2,1,0,0,
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1, // Base
            1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
            0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
            0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
        ],
        colors: ['#78909C', '#B0BEC5', '#CFD8DC', '#40C4FF', '#00B0FF'], // StoneDark, StoneMid, StoneLight, GemLight, GemDark
        pixelGridSize: 16
    },
    desertScorpion: {
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0, // Tail stinger
            0,0,0,0,0,0,0,0,1,2,2,1,0,0,0,0,
            0,0,0,0,0,0,0,1,2,2,2,2,1,0,0,0,
            0,0,0,0,0,0,1,2,2,2,2,2,2,1,0,0, // Tail segments
            0,0,0,0,0,1,2,2,2,2,2,2,2,2,1,0,
            0,0,0,1,1,2,2,2,2,2,2,2,2,2,1,0,
            0,0,1,3,3,3,3,3,3,3,3,2,2,2,1,0, // Body
            0,1,3,3,4,4,3,3,4,4,3,3,3,2,1,0, // Eyes and claws
            1,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,
            1,3,3,3,3,3,3,3,3,3,3,3,3,3,1,0,
            0,1,3,3,3,3,3,3,3,3,3,3,3,1,0,0,
            0,0,1,1,3,3,3,3,3,3,3,1,1,0,0,0, // Legs
            0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,1,1,0,1,1,0,0,1,1,0,1,1,0,0,
            0,0,1,0,0,1,0,0,0,0,1,0,0,1,0,0,
        ],
        colors: ['#8B4513', '#A0522D', '#D2691E', '#000000'], // SaddleBrown, Sienna, Chocolate, Black
        pixelGridSize: 16
    },
    frostWolf: {
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,1,0,0,1,1,0,0,0,0,0, // Ears
            0,0,0,0,1,2,2,1,1,2,2,1,0,0,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0, // Head
            0,0,1,2,2,3,3,2,2,3,3,2,2,1,0,0, // Eyes
            0,1,2,2,2,2,2,4,4,2,2,2,2,2,1,0, // Snout
            0,1,2,2,2,2,4,5,5,4,2,2,2,2,1,0, // Nose
            0,1,2,2,2,2,2,4,4,2,2,2,2,2,1,0,
            0,0,1,2,2,2,2,2,2,2,2,2,2,1,0,0, // Neck
            0,0,1,2,2,2,2,2,2,2,2,2,2,1,0,0, // Body
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            0,0,1,1,2,2,1,1,1,1,2,2,1,1,0,0, // Legs
            0,0,0,1,1,1,0,0,0,0,1,1,1,0,0,0,
            0,0,0,1,1,0,0,0,0,0,0,1,1,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#B0C4DE', '#E6E6FA', '#4682B4', '#000080', '#000000'], // LightSteelBlue, Lavender, SteelBlue, Navy, Black
        pixelGridSize: 16
    },
    volcanicGolem: {
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,1,1,2,2,3,3,2,2,1,1,0,0,0, // Head with glowing eyes
            0,0,1,2,2,3,4,4,4,4,3,2,2,1,0,0,
            0,1,2,2,3,4,5,4,4,5,4,3,2,2,1,0, // Glowing features
            0,1,2,2,2,3,4,4,4,4,3,2,2,2,1,0,
            1,2,2,2,2,2,3,3,3,3,2,2,2,2,2,1, // Shoulders
            1,2,2,2,2,2,2,3,3,2,2,2,2,2,2,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1, // Body
            1,2,2,3,3,2,2,2,2,2,2,3,3,2,2,1,
            1,2,2,3,4,3,2,2,2,2,3,4,3,2,2,1, // Glowing cracks
            0,1,2,2,3,2,2,2,2,2,2,3,2,2,1,0,
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            0,0,1,1,2,2,2,2,2,2,2,2,1,1,0,0, // Legs
            0,0,0,1,1,1,2,2,2,2,1,1,1,0,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,
            0,0,0,0,1,1,1,0,0,1,1,1,0,0,0,0,
        ],
        colors: ['#2F2F2F', '#696969', '#FF4500', '#FF6347', '#FFFF00'], // DarkGray, DimGray, OrangeRed, Tomato, Yellow
        pixelGridSize: 16
    },
    iceElemental: {
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,1,1,2,3,3,3,3,2,1,1,0,0,0, // Top crystalline structure
            0,0,1,2,3,3,4,4,4,4,3,3,2,1,0,0,
            0,1,2,3,3,4,5,4,4,5,4,3,3,2,1,0, // Glowing ice core
            0,1,2,3,4,4,4,5,5,4,4,4,3,2,1,0,
            1,2,3,3,4,5,5,5,5,5,5,4,3,3,2,1, // Central crystalline mass
            1,2,3,4,4,5,5,5,5,5,5,4,4,3,2,1,
            1,2,3,4,5,5,5,5,5,5,5,5,4,3,2,1,
            1,2,3,4,4,5,5,5,5,5,5,4,4,3,2,1,
            1,2,3,3,4,5,5,5,5,5,5,4,3,3,2,1,
            0,1,2,3,4,4,4,5,5,4,4,4,3,2,1,0,
            0,1,2,3,3,4,4,4,4,4,4,3,3,2,1,0,
            0,0,1,2,3,3,3,3,3,3,3,3,2,1,0,0, // Base crystalline structure
            0,0,0,1,1,2,2,3,3,2,2,1,1,0,0,0,
            0,0,0,0,1,1,1,2,2,1,1,1,0,0,0,0,
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
        ],
        colors: ['#B0E0E6', '#87CEEB', '#4682B4', '#1E90FF', '#FFFFFF'], // PowderBlue, SkyBlue, SteelBlue, DodgerBlue, White
        pixelGridSize: 16
    },
    magicTreent: {
        pixels: [
            0,0,0,0,1,1,2,2,2,2,1,1,0,0,0,0, // Magical crown
            0,0,0,1,2,3,3,4,4,3,3,2,1,0,0,0,
            0,0,1,2,3,3,4,5,5,4,3,3,2,1,0,0, // Glowing leaves
            0,1,2,3,3,4,4,5,5,4,4,3,3,2,1,0,
            0,1,2,3,4,4,5,5,5,5,4,4,3,2,1,0,
            1,2,3,3,6,6,6,6,6,6,6,6,3,3,2,1, // Eyes on trunk
            1,2,3,6,7,7,6,6,6,6,7,7,6,3,2,1,
            1,2,3,6,6,6,6,8,8,6,6,6,6,3,2,1, // Mouth
            1,2,3,6,6,6,8,8,8,8,6,6,6,3,2,1,
            1,2,3,6,6,6,6,8,8,6,6,6,6,3,2,1,
            0,1,2,3,6,6,6,6,6,6,6,6,3,2,1,0, // Trunk
            0,1,2,3,3,6,6,6,6,6,6,3,3,2,1,0,
            0,0,1,2,3,3,6,6,6,6,3,3,2,1,0,0,
            0,0,0,1,2,3,3,6,6,3,3,2,1,0,0,0, // Roots
            0,0,0,0,1,2,2,6,6,2,2,1,0,0,0,0,
            0,0,0,0,0,1,1,6,6,1,1,0,0,0,0,0,
        ],
        colors: ['#228B22', '#32CD32', '#00FF00', '#ADFF2F', '#FFFF00', '#8B4513', '#654321', '#000000'], // ForestGreen, LimeGreen, Lime, GreenYellow, Yellow, SaddleBrown, DarkBrown, Black
        pixelGridSize: 16
    },
    
    // Village Building Sprites
    villageHouse: {
        pixels: [
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0, // Roof
            0,0,1,2,2,2,2,2,2,2,2,2,2,1,0,0,
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1, // Wall top
            1,3,4,4,3,3,5,5,5,5,3,3,4,4,3,1, // Windows and door
            1,3,4,4,3,3,5,5,5,5,3,3,4,4,3,1,
            1,3,3,3,3,3,5,5,5,5,3,3,3,3,3,1,
            1,3,3,3,3,3,5,5,5,5,3,3,3,3,3,1,
            1,3,4,4,3,3,5,5,5,5,3,3,4,4,3,1,
            1,3,4,4,3,3,5,5,5,5,3,3,4,4,3,1,
            1,3,3,3,3,3,5,5,5,5,3,3,3,3,3,1,
            1,3,3,3,3,3,6,6,6,6,3,3,3,3,3,1, // Door
            1,1,1,1,1,1,6,6,6,6,1,1,1,1,1,1,
            1,1,1,1,1,1,6,6,6,6,1,1,1,1,1,1,
        ],
        colors: ['#8B4513', '#CD853F', '#D2B48C', '#87CEEB', '#5F9EA0', '#654321'], // Saddle brown, Peru, Tan, Sky blue, Cadet blue, Dark brown
        pixelGridSize: 16
    },
    
    villageShop: {
        pixels: [
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0, // Roof
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,
            1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1, // Wall
            1,3,4,4,4,4,5,5,5,5,4,4,4,4,3,1, // Shop front
            1,3,4,6,6,4,5,5,5,5,4,6,6,4,3,1, // Display windows
            1,3,4,6,6,4,5,5,5,5,4,6,6,4,3,1,
            1,3,4,4,4,4,5,5,5,5,4,4,4,4,3,1,
            1,3,3,3,3,3,5,5,5,5,3,3,3,3,3,1,
            1,3,7,7,3,3,5,5,5,5,3,3,7,7,3,1, // Side windows
            1,3,7,7,3,3,5,5,5,5,3,3,7,7,3,1,
            1,3,3,3,3,3,5,5,5,5,3,3,3,3,3,1,
            1,3,3,3,3,3,8,8,8,8,3,3,3,3,3,1, // Door
            1,1,1,1,1,1,8,8,8,8,1,1,1,1,1,1,
            1,1,1,1,1,1,8,8,8,8,1,1,1,1,1,1,
        ],
        colors: ['#8B4513', '#D2691E', '#F5DEB3', '#FFD700', '#FFA500', '#32CD32', '#87CEEB', '#A0522D'], // Brown, Orange, Wheat, Gold, Orange, Lime, Sky blue, Sienna
        pixelGridSize: 16
    },
    
    villageWell: {
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0, // Top
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0,
            0,0,1,2,2,3,3,3,3,3,3,2,2,1,0,0, // Well rim
            0,1,2,2,3,4,4,4,4,4,4,3,2,2,1,0,
            0,1,2,3,4,5,5,5,5,5,5,4,3,2,1,0, // Water surface
            0,1,2,3,4,5,6,6,6,6,5,4,3,2,1,0,
            0,1,2,3,4,5,5,5,5,5,5,4,3,2,1,0,
            0,1,2,3,4,4,4,4,4,4,4,4,3,2,1,0, // Well walls
            0,1,2,2,3,3,3,3,3,3,3,3,2,2,1,0,
            0,0,1,2,2,2,2,2,2,2,2,2,2,1,0,0,
            0,0,0,1,2,2,2,2,2,2,2,2,1,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#696969', '#A9A9A9', '#808080', '#2F4F4F', '#4682B4', '#87CEEB'], // Dim gray, Dark gray, Gray, Dark slate gray, Steel blue, Sky blue
        pixelGridSize: 16
    },
    
    // Enhanced NPC Sprites with more detail
    richMerchant: {
        pixels: [
            0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0, // Fancy hat
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,1,2,3,3,2,2,3,3,2,1,0,0,0, // Face
            0,0,0,1,2,2,2,4,4,2,2,2,1,0,0,0,
            0,0,0,1,2,2,4,4,4,4,2,2,1,0,0,0, // Beard
            0,0,0,0,1,2,2,2,2,2,2,1,0,0,0,0,
            0,0,0,5,5,5,6,6,6,5,5,5,0,0,0,0, // Rich clothes
            0,0,5,5,6,6,7,7,7,6,6,5,5,0,0,0,
            0,0,5,6,6,7,8,8,8,7,6,6,5,0,0,0, // Gold trim
            0,5,5,6,7,8,9,9,9,8,7,6,5,5,0,0,
            0,5,6,7,8,9,9,9,9,9,8,7,6,5,0,0, // Jeweled vest
            0,5,5,7,8,9,9,9,9,9,8,7,5,5,0,0,
            0,0,5,5,7,8,8,8,8,8,7,5,5,0,0,0,
            0,0,0,5,5,1,1,0,0,1,1,5,5,0,0,0, // Legs
            0,0,0,0,1,10,10,0,0,10,10,1,0,0,0,0, // Fine boots
            0,0,0,0,10,10,10,0,0,10,10,10,0,0,0,0,
        ],
        colors: ['#8B4513', '#FFDBCB', '#000000', '#8B4513', '#9C27B0', '#673AB7', '#FFD700', '#FFA500', '#FF6347', '#FF1493'], // Hat, Skin, Eyes, Beard, Purple, Gold, Orange, Tomato, Pink
        pixelGridSize: 16
    },
    herb: { // A healing herb
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,
            0,0,0,0,0,1,2,1,0,0,0,1,0,0,0,0,
            0,0,0,0,1,2,2,1,0,1,2,1,0,0,0,0,
            0,0,0,0,1,2,2,1,0,1,2,1,0,0,0,0,
            0,0,0,1,2,2,1,0,1,2,2,1,0,0,0,0,
            0,0,0,1,2,1,0,0,0,1,2,1,0,0,0,0,
            0,0,1,2,1,0,0,0,0,0,1,1,0,0,0,0,
            0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: ['#006400', '#228B22'], // DarkGreen, ForestGreen
        pixelGridSize: 16
    },
    altar: { // Enhanced mystical altar
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,1,
            1,2,3,4,4,4,4,4,4,4,4,4,4,3,2,1,
            1,2,3,4,5,5,5,5,5,5,5,5,4,3,2,1,
            1,2,3,4,5,6,6,6,6,6,6,5,4,3,2,1,
            1,2,3,4,5,6,7,7,7,7,6,5,4,3,2,1,
            1,2,3,4,5,6,6,6,6,6,6,5,4,3,2,1,
            1,2,3,4,5,5,5,5,5,5,5,5,4,3,2,1,
            1,2,3,4,4,4,4,4,4,4,4,4,4,3,2,1,
            1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,1,
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,
            0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,
        ],
        colors: [
            '#696969', // 1 - Dark stone
            '#A9A9A9', // 2 - Medium stone  
            '#D3D3D3', // 3 - Light stone
            '#F5F5F5', // 4 - Very light stone
            '#FFD700', // 5 - Gold trim
            '#9400D3', // 6 - Purple mystical center
            '#FF69B4'  // 7 - Pink magical glow
        ],
        pixelGridSize: 16
    },
    
    banner: { // Enhanced royal banner
        pixels: [
            0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
            0,0,0,0,0,1,2,2,2,2,1,0,0,0,0,0,
            0,0,0,0,1,2,3,3,3,3,2,1,0,0,0,0,
            0,0,0,1,2,3,4,4,4,4,3,2,1,0,0,0,
            0,0,1,2,3,4,5,5,5,5,4,3,2,1,0,0,
            0,1,2,3,4,5,6,6,6,6,5,4,3,2,1,0,
            1,2,3,4,5,6,7,7,7,7,6,5,4,3,2,1,
            1,2,3,4,5,6,7,8,8,7,6,5,4,3,2,1,
            1,2,3,4,5,6,7,8,8,7,6,5,4,3,2,1,
            1,2,3,4,5,6,7,7,7,7,6,5,4,3,2,1,
            0,1,2,3,4,5,6,6,6,6,5,4,3,2,1,0,
            0,0,1,2,3,4,5,5,5,5,4,3,2,1,0,0,
            0,0,0,1,2,3,4,4,4,4,3,2,1,0,0,0,
            0,0,0,0,1,2,3,3,3,3,2,1,0,0,0,0,
            0,0,0,0,0,1,2,2,2,2,1,0,0,0,0,0,
            0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,
        ],
        colors: [
            '#8B4513', // 1 - Brown pole
            '#DC143C', // 2 - Crimson base
            '#B22222', // 3 - Fire brick
            '#FF4500', // 4 - Orange red
            '#FFD700', // 5 - Gold trim
            '#1E90FF', // 6 - Dodger blue
            '#0000CD', // 7 - Medium blue
            '#FFFFFF'  // 8 - White emblem
        ],
        pixelGridSize: 16
    },
    
    chest: { // Enhanced treasure chest
        pixels: [
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,1,
            1,2,3,4,4,4,4,5,5,4,4,4,4,3,2,1,
            1,2,3,4,5,5,5,6,6,5,5,5,4,3,2,1,
            1,2,3,4,5,6,6,6,6,6,6,5,4,3,2,1,
            1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,1,
            1,2,3,4,4,4,4,4,4,4,4,4,4,3,2,1,
            1,2,3,4,5,5,5,5,5,5,5,5,4,3,2,1,
            1,2,3,4,5,6,6,6,6,6,6,5,4,3,2,1,
            1,2,3,4,5,5,5,5,5,5,5,5,4,3,2,1,
            1,2,3,3,3,3,3,3,3,3,3,3,3,3,2,1,
            0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,
            0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        ],
        colors: [
            '#8B4513', // 1 - Dark brown frame
            '#CD853F', // 2 - Peru brown
            '#D2691E', // 3 - Chocolate
            '#DEB887', // 4 - Burlywood
            '#F4A460', // 5 - Sandy brown
            '#FFD700'  // 6 - Gold accents
        ],
        pixelGridSize: 16
    }
};
 // Creates a PlaneGeometry with a CanvasTexture for a pixelated sprite look
export function createPixelSprite(spriteType = 'default', size = 1, canvasResolution) {
    let spriteInfo = spriteData[spriteType];
    if (!spriteInfo) {
        console.warn(`[createPixelSprite] Sprite type '${spriteType}' not found. Using default sprite.`);
        spriteInfo = spriteData.default;
    }
    
    const resolution = canvasResolution || spriteInfo.pixelGridSize || 16;
    const canvas = document.createElement('canvas');
    canvas.width = resolution;
    canvas.height = resolution;
    
    // Better context creation with proper error handling
    const context = canvas.getContext('2d', { 
        willReadFrequently: false,
        alpha: true,
        desynchronized: false
    });
    
    if (!context) {
        console.error(`[createPixelSprite] Failed to get 2D context for sprite: ${spriteType}`);
        return createFallbackSprite(size);
    }
    
    // Ensure clean, stable canvas state
    context.imageSmoothingEnabled = false;
    context.globalCompositeOperation = 'source-over';
    context.clearRect(0, 0, resolution, resolution);
    
    // Validate sprite data before drawing
    if (!spriteInfo.pixels || !Array.isArray(spriteInfo.pixels)) {
        console.error(`[createPixelSprite] Invalid pixel data for sprite: ${spriteType}`);
        return createFallbackSprite(size);
    }
    
    // Draw the sprite with better error handling
    try {
        drawPixels(context, spriteInfo.pixels, spriteInfo.pixelGridSize, spriteInfo.colors);
    } catch (error) {
        console.error(`[createPixelSprite] Error drawing pixels for ${spriteType}:`, error);
        return createFallbackSprite(size);
    }
    
    // Create texture with comprehensive error prevention
    let texture;
    try {
        // Validate canvas before creating texture
        if (!canvas || canvas.width === 0 || canvas.height === 0) {
            console.error(`[createPixelSprite] Invalid canvas for ${spriteType}`);
            return createFallbackSprite(size);
        }
        
        texture = new THREE.CanvasTexture(canvas);
        
        // Critical: Set these BEFORE the texture is used
        texture.magFilter = THREE.NearestFilter;
        texture.minFilter = THREE.NearestFilter;
        texture.generateMipmaps = false;
        texture.wrapS = THREE.ClampToEdgeWrapping;
        texture.wrapT = THREE.ClampToEdgeWrapping;
        texture.flipY = false; // Prevent texture flipping issues
        texture.premultiplyAlpha = false; // Prevent alpha corruption
        texture.unpackAlignment = 1; // Better pixel alignment
        texture.format = THREE.RGBAFormat; // Ensure proper format
        texture.type = THREE.UnsignedByteType; // Ensure proper type
        
        // Force immediate texture validation
        texture.needsUpdate = true;
        
    } catch (error) {
        console.error(`[createPixelSprite] Error creating texture for ${spriteType}:`, error);
        return createFallbackSprite(size);
    }
    
    const geometry = new THREE.PlaneGeometry(size, size);
    
    // Enhanced material to prevent flickering, especially in castle interior
    const material = new THREE.MeshBasicMaterial({
        map: texture,
        transparent: true,
        alphaTest: 0.1,
        side: THREE.DoubleSide,
        depthWrite: false,  // Prevent z-fighting issues
        depthTest: true,    // Enable depth testing for proper ordering
        alphaMap: null,     // Prevent alpha conflicts
        fog: false,         // Disable fog to prevent color corruption
        toneMapped: false,  // Prevent tone mapping issues
        polygonOffset: true, // Enable polygon offset
        polygonOffsetFactor: -1, // Slight offset to prevent z-fighting
        polygonOffsetUnits: -1
    });
    
    const mesh = new THREE.Mesh(geometry, material);
    mesh.castShadow = false;
    mesh.receiveShadow = false;
    mesh.frustumCulled = false; // Prevent culling issues
    mesh.rotation.x = Math.PI / 2; // Stand upright (positive rotation)
    
    // Improved dispose function with better cleanup
    mesh.dispose = () => {
        try {
            if (geometry) {
                geometry.dispose();
            }
            if (material) {
                if (material.map) {
                    material.map.dispose();
                }
                material.dispose();
            }
            if (texture) {
                texture.dispose();
            }
        } catch (error) {
            console.warn('Error disposing sprite:', error);
        }
    };
    
    // Simple animation function that doesn't interfere with materials
    mesh.updateAnimation = (time) => {
        // Basic bob animation for NPCs - prevent position corruption
        if (spriteType !== 'player' && spriteType !== 'default') {
            const baseY = mesh.userData.baseY || size/2;
            mesh.position.y = baseY + Math.sin(time * 0.5) * 0.02;
            if (!mesh.userData.baseY) {
                mesh.userData.baseY = baseY;
            }
        }
    };
    
    return mesh;
}

// Fallback sprite creation for error cases
function createFallbackSprite(size) {
    const geometry = new THREE.PlaneGeometry(size, size);
    const material = new THREE.MeshBasicMaterial({
        color: 0xff00ff, // Magenta to indicate error
        transparent: true,
        opacity: 0.8
    });
    const mesh = new THREE.Mesh(geometry, material);
    mesh.rotation.x = Math.PI / 2; // Stand upright (positive rotation)
    mesh.dispose = () => {
        geometry.dispose();
        material.dispose();
    };
    return mesh;
}
// Creates a simple attack effect sprite (e.g., a slash)
export function createMonsterAttackSprite(size = 0.4) {
    const canvas = document.createElement('canvas');
    const canvasSize = 16;
    canvas.width = canvasSize;
    canvas.height = canvasSize;
    const context = canvas.getContext('2d');
    context.imageSmoothingEnabled = false;
    // Draw a red energy ball
    const colors = ['#FF4500', '#B22222', '#8B0000']; // OrangeRed core, Firebrick mid, DarkRed outer
    const cx = canvasSize / 2;
    const cy = canvasSize / 2;
    // Outer glow
    context.fillStyle = colors[2];
    context.beginPath();
    context.arc(cx, cy, 7, 0, Math.PI * 2);
    context.fill();
    // Mid glow
    context.fillStyle = colors[1];
    context.beginPath();
    context.arc(cx, cy, 5, 0, Math.PI * 2);
    context.fill();
    // Core
    context.fillStyle = colors[0];
    context.beginPath();
    context.arc(cx, cy, 3, 0, Math.PI * 2);
    context.fill();
    const texture = new THREE.CanvasTexture(canvas);
    texture.magFilter = THREE.NearestFilter;
    texture.minFilter = THREE.NearestFilter;
    const geometry = new THREE.PlaneGeometry(size, size);
    const material = new THREE.MeshBasicMaterial({
        map: texture,
        transparent: true,
        alphaTest: 0.1,
        side: THREE.DoubleSide
    });
    const mesh = new THREE.Mesh(geometry, material);
    mesh.rotation.x = Math.PI / 2; // Stand upright (positive rotation)
    mesh.dispose = () => {
        geometry.dispose();
        material.dispose();
        texture.dispose();
    };
    return mesh;
}
// Creates a magic bolt sprite for the player
export function createAttackSprite(size = 0.5) {
     const canvas = document.createElement('canvas');
     const canvasSize = 16;
     canvas.width = canvasSize;
     canvas.height = canvasSize;
     const context = canvas.getContext('2d');
     context.imageSmoothingEnabled = false; // Ensure sharp pixels
     // Draw a simple magic bolt/spark
     const colors = ['#FFFFFF', '#9999FF', '#5D3FD3']; // White core, light purple glow, dark purple outline
     const cx = canvasSize / 2;
     const cy = canvasSize / 2;
     // Outer glow (darker purple)
     context.fillStyle = colors[2];
     context.beginPath();
     context.moveTo(cx, 0);
     context.lineTo(canvasSize - 2, cy);
     context.lineTo(cx, canvasSize);
     context.lineTo(2, cy);
     context.closePath();
     context.fill();
     // Inner glow (lighter purple)
      context.fillStyle = colors[1];
      context.beginPath();
      context.moveTo(cx, 2);
      context.lineTo(canvasSize - 4, cy);
      context.lineTo(cx, canvasSize - 2);
      context.lineTo(4, cy);
      context.closePath();
      context.fill();
     // Core (white)
     context.fillStyle = colors[0];
     context.fillRect(cx - 1, cy - 3, 2, 6); // Vertical core
     context.fillRect(cx - 3, cy - 1, 6, 2); // Horizontal core
     const texture = new THREE.CanvasTexture(canvas);
     texture.magFilter = THREE.NearestFilter;
     texture.minFilter = THREE.NearestFilter;
     const geometry = new THREE.PlaneGeometry(size, size);
     const material = new THREE.MeshBasicMaterial({
         map: texture,
         color: 0xffffff, // Don't tint the texture
         transparent: true, // Use alpha from canvas
         alphaTest: 0.1,   // Render only non-transparent pixels
         side: THREE.DoubleSide
     });
     const mesh = new THREE.Mesh(geometry, material);
     mesh.rotation.x = Math.PI / 2; // Stand upright (positive rotation)
     // Attach dispose function
      mesh.dispose = () => {
         geometry.dispose();
         material.dispose();
         texture.dispose();
     };
     return mesh;
}
export function getPixelSpriteTexture(spriteType = 'default', size = 1, canvasResolution) {
    let spriteInfo = spriteData[spriteType];
    if (!spriteInfo) {
        console.warn(`[getPixelSpriteTexture] Sprite type '${spriteType}' not found. Using default sprite.`);
        spriteInfo = spriteData.default;
    }
    const resolution = canvasResolution || spriteInfo.pixelGridSize || 16;
    const canvas = document.createElement('canvas');
    canvas.width = resolution;
    canvas.height = resolution;
    const context = canvas.getContext('2d');
    context.imageSmoothingEnabled = false;
    drawPixels(context, spriteInfo.pixels, spriteInfo.pixelGridSize, spriteInfo.colors);
    const texture = new THREE.CanvasTexture(canvas);
    texture.magFilter = THREE.NearestFilter;
    texture.minFilter = THREE.NearestFilter;
    return texture;
}